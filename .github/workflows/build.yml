name: CI/CD

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

env:
  QT_VERSION: 5.15.2
  BUILD_TYPE: Release
  packageGlob: makoureactor-continuous-*.*

jobs:
  main_build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
           name: "Linux-amd64"
           , os: ubuntu-18.04
           , ff7tkPrefix: /usr
           , make_install_ff7tk: sudo
           , install_ninja: "sudo apt-get install -qq ninja-build"
           , build_makoureactor: "DESTDIR=appdir ninja install; find appdir/"
           , generator: Ninja
           , rename_package: "mv *.tar.xz makoureactor-continuous-linux64.tar.xz"
           , qt_tools: "tools_ninja,1.10.2,qt.tools.ninja"
          }
        - {
            name: "MacOS-amd64"
            , os: macos-latest
            , ff7tkPrefix: /usr/local
            , make_install_ff7tk: sudo
            , install_ninja: "brew install ninja"
            , build_makoureactor: "ninja"
            , generator: Ninja
            , rename_package: "mv *.dmg makoureactor-continuous-macos64.dmg"
            , qt_tools: "tools_ninja,1.10.2,qt.tools.ninja"
          }
        - {
            name: "Windows-x64"
            , os: windows-latest
            , WIN_ARCH: "x64"
            , QT_ARCH: win64_msvc2019_64
            , ff7tkPrefix: "C:/ff7tk"
            , make_install_ff7tk: ""
            , install_ninja: "echo ok"
            , build_makoureactor: "ninja install"
            , generator: "NMake Makefiles JOM"
            , rename_package: "mv *.zip makoureactor-continuous-win64.zip"
            , qt_tools: "tools_qtcreator,5.0.1-0,qt.tools.qtcreator"
          }
        - {
            name: "Windows-x86"
            , os: windows-latest
            , WIN_ARCH: "amd64_x86"
            , QT_ARCH: win32_msvc2019
            , ff7tkPrefix: "C:/ff7tk"
            , make_install_ff7tk: ""
            , install_ninja: "echo ok"
            , build_makoureactor: "ninja install"
            , generator: "NMake Makefiles JOM"
            , rename_package: "mv *.zip makoureactor-continuous-win32.zip"
            , qt_tools: "tools_qtcreator,5.0.1-0,qt.tools.qtcreator"
          }
    steps:
    - uses: actions/checkout@v2

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v2
      with:
        path: "${{ matrix.config.QT_INST_DIR }}/Qt"
        key: ${{ runner.os }}-build-qt-${{ env.QT_VERSION }}

    - name: Clone ff7tk repo
      run: git clone --depth 1 --single-branch --branch master https://github.com/myst6re/ff7tk.git ${{ github.workspace }}/../ff7tk-git

    - name: Cache ff7tk
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/../build-ff7tk-git
        key: ${{ runner.os }}-build-ff7tk-${{ hashFiles('../ff7tk-git/.git/HEAD') }}

    - name: Env Script (Windows)
      uses: ilammy/msvc-dev-cmd@v1
      if: runner.os == 'Windows'
      with:
        arch: ${{ matrix.config.WIN_ARCH }}

    - name: Install Ninja
      run: ${{ matrix.config.install_ninja }}

    - name: Install Qt
      uses: jurplel/install-qt-action@v2.14.0
      with:
       arch: ${{ matrix.config.QT_ARCH }}
       version: ${{ env.QT_VERSION }}
       cached: ${{ steps.cache-qt.outputs.cache-hit }}
       tools: ${{ matrix.config.qt_tools }}

    - name: Add JOM to path
      if: runner.os == 'Windows'
      run: |
        echo "${{ github.workspace }}/../Qt/Tools/QtCreator/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "${{ github.workspace }}/../Qt/Tools/QtCreator/bin/jom" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Build ff7tk
      run: |
        cd ${{ github.workspace }}/../ff7tk-git
        cmake -G "${{ matrix.config.generator }}" -S. -B ${{ github.workspace }}/../build-ff7tk-git -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_INSTALL_PREFIX=${{ matrix.config.ff7tkPrefix }} -DFORMATS=OFF -DUTILS=ON -DWIDGETS=OFF
        ${{ matrix.config.make_install_ff7tk }} cmake --build ${{ github.workspace }}/../build-ff7tk-git --target install
        cd ${{ github.workspace }}

    - name: Build Makou_Reactor
      id: main_build
      run: |
        cmake -S. -G "${{ matrix.config.generator }}" -B ${{ github.workspace }}/../build-makoureactor -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -Dff7tk_DIR=${{ matrix.config.ff7tkPrefix }}/lib/cmake/ff7tk
        ${{ matrix.config.make_install_ff7tk }} cmake --build ${{ github.workspace }}/../build-makoureactor --target install

    - name: CPack
      run: |
        cd ${{ github.workspace }}/../build-makoureactor
        cpack

    - name: Build AppImage (Linux)
      if: runner.os == 'Linux'
      run: |
        wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
        export VERSION=continuous
        chmod a+x linuxdeployqt*.AppImage
        unset QTDIR; unset QT_PLUGIN_PATH; unset LD_LIBRARY_PATH
        mkdir -p ./appdir/usr/share/ff7tk/lang
        cp /usr/share/ff7tk/lang/*.qm ./appdir/usr/share/ff7tk/lang
        mkdir -p ./appdir/usr/plugins/styles
        ./linuxdeployqt*.AppImage ./appdir/usr/share/applications/*.desktop -appimage -extra-plugins=iconengines,platformthemes/libqxdgdesktopportal.so
        find ./appdir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq

    - name: Prepare Upload
      shell: bash
      run: ${{ matrix.config.rename_package }}

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        path: ${{ github.workspace }}/../build-makoureactor/${{ env.packageGlob }}

  release_assets:
    name: Release
    needs: main_Build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - name: Download Files
      uses: actions/download-artifact@v2

    - name: Move Files
      run: |
        mv artifact/* ${{ github.workspace }}

    - name: Deploy Package
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
       repo_token: "${{ secrets.DEPLOYTOKEN }}"
       automatic_release_tag: "continuous"
       prerelease: false
       title: "Continuous Build"
       files: ${{ env.packageGlob }}
