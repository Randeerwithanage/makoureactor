name: CI/CD

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

env:
  QT_VERSION: 5.15.2
  NINJA_VERSION: 1.10.2

jobs:
  main_build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - name: "Linux-amd64"
          os: ubuntu-18.04
          package_extension: 'tar.xz'
          package_suffix: 'linux64'
        - name: "MacOS-amd64"
          os: macos-latest
          package_extension: 'dmg'
          package_suffix: 'macos64'
        - name: "Windows-x64"
          os: windows-latest
          WIN_ARCH: "x64"
          QT_ARCH: win64_msvc2019_64
          package_extension: 'zip'
          package_suffix: 'win64'
        - name: "Windows-x86"
          os: windows-latest
          WIN_ARCH: "amd64_x86"
          QT_ARCH: win32_msvc2019
          package_extension: 'zip'
          package_suffix: 'win32'
    env:
      qt_installation_path: ${{ github.workspace }}/Qt
      ff7tk_path: ${{ github.workspace }}/../ff7tk-git
      ff7tk_build_path: ${{ github.workspace }}/../build-ff7tk-git
      ff7tk_installation_path: ${{ github.workspace }}/ff7tk
      makoureactor_build_path: ${{ github.workspace }}/../build-makoureactor
      makoureactor_installation_path: ${{ github.workspace }}/../installation-makoureactor
      makoureactor_appbundle_path: ${{ github.workspace }}/../appbundle-makoureactor
      CMAKE_GENERATOR: Ninja
      CMAKE_BUILD_TYPE: Release
      packageGlob: makoureactor-continuous-*.*
    steps:
    - uses: actions/checkout@v2

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v2
      with:
        path: ${{ env.qt_installation_path }}
        key: ${{ runner.os }}${{ matrix.config.WIN_ARCH }}-qt-${{ env.QT_VERSION }}-${{ env.NINJA_VERSION }}

    - name: Clone ff7tk repo
      run: git clone --depth 1 --single-branch --branch master https://github.com/myst6re/ff7tk.git ${{ env.ff7tk_path }}

    - name: Get ff7tk HEAD
      run: git rev-parse HEAD > ${{ github.workspace }}/ff7tk-HEAD
      working-directory: ${{ env.ff7tk_path }}

    - name: Cache ff7tk
      id: cache-ff7tk
      uses: actions/cache@v2
      with:
        path: ${{ env.ff7tk_installation_path }}
        key: ${{ runner.os }}${{ matrix.config.WIN_ARCH }}-ff7tk-utils-formats-${{ hashFiles('ff7tk-HEAD') }}

    - name: Env Script (Windows)
      uses: ilammy/msvc-dev-cmd@v1
      if: runner.os == 'Windows'
      with:
        arch: ${{ matrix.config.WIN_ARCH }}

    - name: Install Qt
      uses: jurplel/install-qt-action@v2.14.0
      with:
       dir: ${{ env.qt_installation_path }}
       arch: ${{ matrix.config.QT_ARCH }}
       version: ${{ env.QT_VERSION }}
       cached: ${{ steps.cache-qt.outputs.cache-hit }}
       tools: tools_ninja,${{ env.NINJA_VERSION }},qt.tools.ninja

    - name: Add Ninja to path
      run: echo "$IQTA_TOOLS/Ninja" >> $GITHUB_PATH

    - name: Build ff7tk
      if: steps.cache-ff7tk.outputs.cache-hit != 'true'
      run: |
        cmake -B ${{ env.ff7tk_build_path }} -DCMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }} -DCMAKE_INSTALL_PREFIX=${{ env.ff7tk_installation_path }} -DFORMATS=ON -DUTILS=ON -DWIDGETS=OFF
        cmake --build ${{ env.ff7tk_build_path }} --target install -j3
      working-directory: ${{ env.ff7tk_path }}

    - name: Download linuxdeployqt
      if: runner.os == 'Linux'
      run: |
        wget -qc "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage"
        wget -qc "https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage"
        export VERSION=continuous
        chmod a+x linuxdeploy*.AppImage
        mv linuxdeploy-plugin-qt-*.AppImage $Qt5_DIR/bin/linuxdeploy-plugin-qt
        mv linuxdeploy-*.AppImage $Qt5_DIR/bin/linuxdeploy

    - name: Build Makou_Reactor
      id: main_build
      run: |
        cmake -B ${{ env.makoureactor_build_path }} -DCMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }} -DCMAKE_INSTALL_PREFIX=${{ env.makoureactor_installation_path }} -Dff7tk_DIR=${{ env.ff7tk_installation_path }}/lib/cmake/ff7tk
        cmake --build ${{ env.makoureactor_build_path }} --target all -j3

    - name: CPack
      run: cpack
      working-directory: ${{ env.makoureactor_build_path }}

    - name: Build AppImage (Linux)
      if: runner.os == 'Linux'
      run: |
        export VERSION=continuous
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${{ env.ff7tk_installation_path }}/lib
        linuxdeploy --appdir="${{ env.makoureactor_appbundle_path }}" --plugin=qt --output appimage \
          -e "${{ env.makoureactor_installation_path }}"/bin/Makou_Reactor \
          -d "${{ env.makoureactor_installation_path }}"/share/applications/Makou_Reactor.desktop \
          -i "${{ env.makoureactor_installation_path }}"/share/icons/hicolor/256x256/apps/Makou_Reactor.png
        mv *.AppImage makoureactor-continuous-${{ matrix.config.package_suffix }}.AppImage

    - name: Prepare Upload
      shell: bash
      run: mv ../build-makoureactor/*.${{ matrix.config.package_extension }} makoureactor-continuous-${{ matrix.config.package_suffix }}.${{ matrix.config.package_extension }}

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        path: ${{ github.workspace }}/${{ env.packageGlob }}

  release_assets:
    name: Release
    needs: main_Build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - name: Download Files
      uses: actions/download-artifact@v2

    - name: Move Files
      run: mv artifact/* ${{ github.workspace }}

    - name: Deploy Package
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
       repo_token: "${{ secrets.DEPLOYTOKEN }}"
       automatic_release_tag: "continuous"
       prerelease: false
       title: "Continuous Build"
       files: ${{ env.packageGlob }}
